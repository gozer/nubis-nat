# File generated by confd
#
# Rule ranges:
#   000 - 099 Rules that we statically manage
#   100 - 199 TCP confd generated rules
#   200 - 299 UDP confd generated rules
#   990 - 999 Bottom of the file rules

$vpc_cidr = '%%VPC_CIDR%%'

class { 'firewall': }

resources { 'firewall':
    purge   => true,
}

# Default chains to drop
firewallchain { 'INPUT:filter:IPv4':
    ensure  => 'present',
    policy  => 'drop',
}

firewallchain { 'OUTPUT:filter:IPv4':
    ensure  => 'present',
    policy  => 'drop',
}

# Nat iptable
firewall { "000 snat for network ${vpc_cidr}":
  chain    => 'POSTROUTING',
  jump     => 'MASQUERADE',
  proto    => 'all',
  outiface => 'eth0',
  source   => $vpc_cidr,
  table    => 'nat',
}

# Some default rules
# Allow loopback
firewall { '000 allow outbound lo':
    chain    => 'OUTPUT',
    outiface => 'lo',
    proto    => 'all',
    action   => 'accept',
} ->
firewall { '000 allow inbound lo':
    chain   => 'INPUT',
    iniface => 'lo',
    proto   => 'all',
    action  => 'accept',
} ->
firewall { '000 reject local traffic outbound on loopback':
    chain    => 'OUTPUT',
    outiface => 'lo',
    source   => '127.0.0.0/8',
    action   => 'reject',
} ->
firewall { '000 reject local traffic inbound on loopback':
    chain   => 'INPUT',
    iniface => 'lo',
    source  => '127.0.0.0/8',
    action  => 'reject',
}

# allow icmp
firewall { '001 allow outbound icmp':
    chain   => 'OUTPUT',
    proto   => 'icmp',
    action  => 'accept',
} ->
firewall { '001 allow inbound icmp':
    chain   => 'INPUT',
    proto   => 'icmp',
    action  => 'accept',
}

# udp dns rules
firewall { '002 allow outbound udp dns eth0':
     chain    => 'OUTPUT',
     outiface => 'eth0',
     proto    => 'udp',
     dport    => '53',
     sport    => '1025-65535',
     action   => 'accept',
}

firewall { '002 allow inbound udp dns eth0':
     chain   => 'INPUT',
     iniface => 'eth0',
     proto   => 'udp',
     sport   => '53',
     dport   => '1025-65535',
     action  => 'accept',
}

firewall { '002 allow outbound udp dns eth1':
     chain    => 'OUTPUT',
     outiface => 'eth1',
     proto    => 'udp',
     dport    => '53',
     sport    => '1025-65535',
     action   => 'accept',
}

firewall { '002 allow inbound udp dns eth1':
     chain   => 'INPUT',
     iniface => 'eth1',
     proto   => 'udp',
     sport   => '53',
     dport   => '1025-65535',
     action  => 'accept',
}

# tcp dns rules
firewall { '003 allow tcp outbound dns eth0':
    chain    => 'OUTPUT',
    outiface => 'eth0',
    proto    => 'tcp',
    dport    => '53',
    sport    => '1025-65535',
    action   => 'accept',
}

firewall { '003 allow tcp inbound dns eth0':
    chain     => 'INPUT',
    iniface   => 'eth0',
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    sport     => '53',
    dport     => '1025-65535',
    action    => 'accept',
}

firewall { '003 allow tcp outbound dns eth1':
    chain     => 'OUTPUT',
    outiface  => 'eth1',
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    dport     => '53',
    sport     => '1025-65535',
    action    => 'accept',
}

firewall { '003 allow tcp inbound dns eth1':
    chain   => 'INPUT',
    iniface => 'eth1',
    proto   => 'tcp',
    sport   => '53',
    dport   => '1025-65535',
    action  => 'accept',
}

# http/s rules for eth0
firewall { '004 allow outbound http/s eth0':
    chain    => 'OUTPUT',
    outiface => 'eth0',
    proto    => 'tcp',
    dport    => ['80', '443'],
    sport    => '1025-65535',
    action   => 'accept',
}

firewall { '004 allow inbound http/s eth0':
    chain       => 'INPUT',
    iniface     => 'eth0',
    proto       => 'tcp',
    tcp_flags   => '! SYN,RST,ACK,FIN SYN',
    sport       => [ '80', '443' ],
    dport       => '1025-65535',
    action      => 'accept',
}

# fluentd rules
firewall { '005 allow tcp outbound fluentd eth0':
    chain       => 'OUTPUT',
    outiface    => 'eth0',
    destination => $vpc_cidr,
    proto       => 'tcp',
    dport       => '24224',
    sport       => '1025-65535',
    action      => 'accept',
}
firewall { '005 allow tcp inbound fluentd eth0':
    chain     => 'INPUT',
    iniface   => 'eth0',
    source    => $vpc_cidr,
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    sport     => '24224',
    dport     => '1025-65535',
    action    => 'accept',
}
firewall { '005 allow udp outbound fluentd eth0':
    chain       => 'OUTPUT',
    outiface    => 'eth0',
    destination => $vpc_cidr,
    proto       => 'udp',
    dport       => '24224',
    sport       => '1025-65535',
    action      => 'accept',
}
firewall { '005 allow udp inbound fluentd eth0':
    chain   => 'INPUT',
    iniface => 'eth0',
    source  => $vpc_cidr,
    proto   => 'udp',
    sport   => '24224',
    dport   => '1025-65535',
    action  => 'accept',
}

firewall { '006 allow tcp outbound fluentd eth1':
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    destination => $vpc_cidr,
    proto       => 'tcp',
    dport       => '24224',
    sport       => '1025-65535',
    action      => 'accept',
}
firewall { '006 allow tcp inbound fluentd eth1':
    chain     => 'INPUT',
    iniface   => 'eth1',
    source    => $vpc_cidr,
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    sport     => '24224',
    dport     => '1025-65535',
    action    => 'accept',
}
firewall { '006 allow udp outbound fluentd eth1':
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    destination => $vpc_cidr,
    proto       => 'udp',
    dport       => '24224',
    sport       => '1025-65535',
    action      => 'accept',
}

firewall { '006 allow udp inbound fluentd eth1':
    chain   => 'INPUT',
    iniface => 'eth1',
    source  => $vpc_cidr,
    proto   => 'udp',
    sport   => '24224',
    dport   => '1025-65535',
    action  => 'accept',
}

# Consul rules eth0
firewall { '007 allow outbound udp consul eth0':
    chain       => 'OUTPUT',
    outiface    => 'eth0',
    destination => $vpc_cidr,
    proto       => 'udp',
    dport       => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    sport       => '1025-65535',
    action      => 'accept',
}

firewall { '007 allow inbound udp consul eth0':
    chain   => 'INPUT',
    iniface => 'eth0',
    source  => $vpc_cidr,
    proto   => 'udp',
    sport   => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    dport   => '1025-65535',
    action  => 'accept',
}

firewall { '007 allow outbound tcp consul eth0':
    chain       => 'OUTPUT',
    outiface    => 'eth0',
    destination => $vpc_cidr,
    proto       => 'tcp',
    dport       => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    sport       => '1025-65535',
    action      => 'accept',
}

firewall { '007 allow inbound tcp consul eth0':
    chain     => 'INPUT',
    iniface   => 'eth0',
    source    => $vpc_cidr,
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    sport     => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    dport     => '1025-65535',
    action    => 'accept',
}

# consul outbound port 8301 tcp
firewall { '007 allow inbound tcp port 8301 eth1':
    chain   => 'INPUT',
    iniface => 'eth1',
    source  => $vpc_cidr,
    proto   => 'tcp',
    dport   => '8301',
    sport   => '1025-65535',
    action  => 'accept',
}

firewall { '007 allow outbound tcp port 8301 eth1':
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    destination => $vpc_cidr,
    proto       => 'tcp',
    sport       => '8301',
    dport       => '1025-65535',
    action      => 'accept',
}

# consul rules eth1
firewall { '008 allow outbound udp consul eth1':
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    destination => $vpc_cidr,
    proto       => 'udp',
    dport       => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    sport       => '1025-65535',
    action      => 'accept',
}

firewall { '008 allow inbound udp consul eth1':
    chain   => 'INPUT',
    iniface => 'eth1',
    source  => $vpc_cidr,
    proto   => 'udp',
    sport   => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    dport   => '1025-65535',
    action  => 'accept',
}

firewall { '008 allow outbound tcp consul eth1':
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    destination => $vpc_cidr,
    proto       => 'tcp',
    dport       => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    sport       => '1025-65535',
    action      => 'accept',
}

firewall { '008 allow inbound tcp consul eth1':
    chain     => 'INPUT',
    iniface   => 'eth1',
    source    => $vpc_cidr,
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    sport     => [ '8300', '8301', '8302', '8400', '8500', '8600' ],
    dport     => '1025-65535',
    action    => 'accept',
}

# allow squid outbound
firewall { '009 allow outbound udp squid':
    chain    => 'OUTPUT',
    outiface => 'eth1',
    proto    => 'udp',
    sport    => '3128',
    dport    => '1025-65535',
    action   => 'accept',
}

firewall { '009 allow inbound udp squid':
    chain   => 'INPUT',
    iniface => 'eth1',
    source  => $vpc_cidr,
    proto   => 'udp',
    dport   => '3128',
    sport   => '1025-65535',
    action  => 'accept',
}

firewall { '009 allow outbound tcp squid':
    chain    => 'OUTPUT',
    outiface => 'eth1',
    proto    => 'tcp',
    sport    => '3128',
    dport    => '1025-65535',
    action   => 'accept',
}

firewall { '009 allow inbound tcp squid':
    chain   => 'INPUT',
    iniface => 'eth1',
    source  => $vpc_cidr,
    proto   => 'tcp',
    dport   => '3128',
    sport   => '1025-65535',
    action  => 'accept',
}

# allow ntp outbound
firewall { '010 allow outbound ntp':
    chain       => 'OUTPUT',
    outiface    => 'eth0',
    proto       => 'udp',
    sport       => '123',
    dport       => '123',
    destination => '0.0.0.0/0',
    action      => 'accept',
}

firewall { '010 allow inbound ntp':
    chain       => 'INPUT',
    iniface     => 'eth0',
    proto       => 'udp',
    source      => '0.0.0.0/0',
    sport       => '123',
    destination => $vpc_cidr,
    dport       => '123',
    action      => 'accept',
}

firewall { "010 allow outbound ntp from unpriviledged port to ${vpc_cidr}":
    chain       => 'OUTPUT',
    outiface    => 'eth0',
    proto       => 'udp',
    source      => $vpc_cidr,
    sport       => '1025-65535',
    destination => '0.0.0.0/0',
    dport       => '123',
    action      => 'accept',
}

firewall { "010 allow inbound ntp from ${vpc_cidr} to unpriviledged port":
    chain       => 'INPUT',
    iniface     => 'eth0',
    proto       => 'udp',
    source      => '0.0.0.0/0',
    sport       => '123',
    destination => $vpc_cidr,
    dport       => '1025-65535',
    action      => 'accept',
}

# ssh rules
firewall { '011 allow outbound ssh':
    chain    => 'OUTPUT',
    outiface => 'eth1',
    proto    => tcp,
    sport    => '22',
    dport    => '1025-65535',
    action   => 'accept',
}

firewall { '011 allow inbound ssh':
    chain   => 'INPUT',
    iniface => 'eth1',
    source  => $vpc_cidr,
    proto   => tcp,
    dport   => '22',
    sport   => '1025-65535',
    action  => 'accept',
}

# allow DHCP
firewall { '012 allow inbound dhcp to broadcast':
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    proto       => 'udp',
    source      => '0.0.0.0/0',
    sport       => '68',
    destination => '255.255.255.255',
    dport       => '67',
    action      => 'accept',
}

firewall { '012 allow outbound dhcp to broadcast':
    chain       => 'INPUT',
    iniface     => 'eth1',
    proto       => 'udp',
    source      => '0.0.0.0/0',
    sport       => '67',
    destination => '255.255.255.255',
    dport       => '68',
    action      => 'accept',
}

firewall { "012 allow inbound dhcp from ${vpc_cidr} to broadcast":
    chain       => 'INPUT',
    iniface     => 'eth1',
    proto       => 'udp',
    source      => $vpc_cidr,
    sport       => '67',
    destination => '255.255.255.255',
    dport       => '68',
    action      => 'accept',
}

firewall { "012 allow outbound dhcp from anywhere to ${vpc_cidr}":
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    proto       => 'udp',
    source      => '0.0.0.0/0',
    sport       => '68',
    destination => $vpc_cidr,
    dport       => '67',
    action      => 'accept',
}

firewall { "012 allow inbound dhcp from ${vpc_cidr} to ${vpc_cidr}":
    chain       => 'INPUT',
    iniface     => 'eth1',
    proto       => 'udp',
    source      => $vpc_cidr,
    sport       => '67',
    destination => $vpc_cidr,
    dport       => '68',
    action      => 'accept',
}

firewall { "012 allow outbound dhcp from ${vpc_cidr} to ${vpc_cidr}":
    chain       => 'OUTPUT',
    outiface    => 'eth1',
    proto       => 'udp',
    source      => $vpc_cidr,
    sport       => '68',
    destination => $vpc_cidr,
    dport       => '67',
    action      => 'accept',
}

### confd generated rules
{{ if exists "/config/IptablesAllowTCP" }}{{ range jsonArray (getv "/config/IptablesAllowTCP") }}
firewall { '101 allow tcp outbound port {{.}} eth0':
    chain    => 'OUTPUT',
    outiface => 'eth0',
    proto    => 'tcp',
    dport    => '{{.}}',
    sport    => '1025-65535',
    action   => 'accept',
} ->
firewall { '101 allow tcp inbound port {{.}} eth0':
    chain     => 'INPUT',
    iniface   => 'eth0',
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    sport     => {{.}},
    dport     => '1025-65535',
    action    => 'accept',
}

firewall { '102 allow tcp outbound port {{.}} eth1':
    chain     => 'OUTPUT',
    outiface  => 'eth1',
    proto     => 'tcp',
    tcp_flags => '! SYN,RST,ACK,FIN SYN',
    sport     => '{{.}}',
    dport     => '1025-65535',
    action    => 'accept',
} ->
firewall { '102 allow tcp inbound port {{.}} eth1':
    chain   => 'INPUT',
    iniface => 'eth1',
    proto   => 'tcp',
    dport   => {{.}},
    sport   => '1025-65535',
    action  => 'accept',
}
{{ end }}{{ end }}
{{ if exists "/config/IptablesAllowUDP" }}{{ range jsonArray (getv "/config/IptablesAllowUDP") }}
firewall { '201 allow outbound udp port {{.}} eth0':
    chain    => 'OUTPUT',
    outiface => 'eth0',
    proto    => 'udp',
    dport    => {{.}},
    sport    => '1025-65535',
    action   => 'accept',
} ->
firewall { '201 allow inbound udp port {{.}} eth0':
    chain   => 'INPUT',
    iniface => 'eth0',
    proto   => 'udp',
    sport   => {{.}},
    dport   => '1025-65535',
    action  => 'accept',
}

firewall { '202 allow outbound udp port {{.}} eth1':
    chain    => 'OUTPUT',
    outiface => 'eth1',
    proto    => 'udp',
    dport    => {{.}},
    sport    => '1025-65535',
    action   => 'accept',
} ->
firewall { '202 allow inbound udp port {{.}} eth1':
    chain     => 'INPUT',
    iniface   => 'eth1',
    proto     => 'udp',
    sport     => {{.}},
    dport     => '1025-65535',
    action    => 'accept',
}
{{ end }}{{ end }}
### End confd generated rules

# Logging
firewall { '998 INPUT logging':
    chain      => 'INPUT',
    jump       => 'LOG',
    log_level  => '6',
    log_prefix => '[fwdeny-input] ',
    proto      => 'all',
}

firewall { '998 OUTPUT logging':
    chain      => 'OUTPUT',
    jump       => 'LOG',
    log_level  => '6',
    log_prefix => '[fwdeny-output] ',
    proto      => 'all',
}

# Default deny
firewall { "999 deny outbound all on source ${vpc_cidr}":
    chain    => 'OUTPUT',
    source   => $vpc_cidr,
    proto    => 'all',
    action   => 'reject',
}
firewall { "999 deny inbound all on source ${vpc_cidr}":
    chain   => 'INPUT',
    source  => $vpc_cidr,
    proto   => 'all',
    action  => 'reject',
}
