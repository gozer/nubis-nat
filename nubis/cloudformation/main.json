{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploys a NAT instance in an autoscaling group",
  "Parameters": {
    "ServiceName": {
      "Description": "Name of the service",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "prod",
        "stage",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, stage, or sandbox."
    },
    "SSHKeyName": {
      "Description": "Existing ssh key to deploy to EC2 instances",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "AmiId": {
      "Description": "The id of the ami for this region",
      "Type": "String"
    },
    "StacksVersion": {
      "Description": "Version of the Nubis Stacks",
      "Type": "String",
      "Default": "v1.0.0"
    }
  },
  "Mappings": {
    "InstanceTypeMap": {
      "prod": {
        "InstanceType": "m3.medium"
      },
      "stage": {
        "InstanceType": "m3.medium"
      },
      "sandbox": {
        "InstanceType": "t2.small"
      }
    }
  },
  "Resources": {
    "EC2Stack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com/nubis-stacks",
              {
                "Ref": "StacksVersion"
              },
              "ec2.template"
            ]
          ]
        },
        "TimeoutInMinutes": "60",
        "Parameters": {
          "StackName": {
            "Ref": "AWS::StackName"
          },
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "TechnicalOwner": {
            "Ref": "TechnicalOwner"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "AmiId": {
            "Ref": "AmiId"
          },
          "IamRole": {
            "Ref": "IamRole"
          },
          "SSHKeyName": {
            "Ref": "SSHKeyName"
          },
          "SecurityGroup": {
            "Ref": "NatSecurityGroup"
          },
          "SubnetLocation": "public",
          "InstanceType": {
            "Fn::FindInMap": [
              "InstanceTypeMap",
              {
                "Ref": "Environment"
              },
              "InstanceType"
            ]
          }
        }
      }
    },
    "NatSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "NAT Security Group",
        "VpcId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "VpcId"
          ]
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "VpcInfo",
                "InternetAccessSecurityGroupId"
              ]
            }
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "VpcInfo",
                "InternetAccessSecurityGroupId"
              ]
            }
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "8",
            "ToPort": "-1",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "VpcInfo",
                "InternetAccessSecurityGroupId"
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "NATSecurityGroup"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": "Netops"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "VpcInfo": {
      "Type": "Custom::VpcInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              "LookupNestedStackOutputs"
            ]
          ]
        },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::Region"
              },
              "vpc"
            ]
          ]
        },
        "SearchString": {
          "Ref": "Environment"
        }
      }
    },
    "EniAZ1": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "ENI for AZ1",
        "SourceDestCheck": "false",
        "GroupSet": [
          {
            "Ref": "NatSecurityGroup"
          }
        ],
        "SubnetId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "PrivateSubnetAZ1"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ServiceName"
                  },
                  " (",
                  {
                    "Ref": "Environment"
                  },
                  ")"
                ]
              ]
            }
          },
          {
            "Key": "StackName",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Description",
            "Value": "eniaz1"
          }
        ]
      }
    },
    "EniAZ2": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "ENI for AZ2",
        "SourceDestCheck": "false",
        "GroupSet": [
          {
            "Ref": "NatSecurityGroup"
          }
        ],
        "SubnetId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "PrivateSubnetAZ2"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ServiceName"
                  },
                  " (",
                  {
                    "Ref": "Environment"
                  },
                  ")"
                ]
              ]
            }
          },
          {
            "Key": "StackName",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Description",
            "Value": "eniaz2"
          }
        ]
      }
    },
    "EniAZ3": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "ENI for AZ3",
        "SourceDestCheck": "false",
        "GroupSet": [
          {
            "Ref": "NatSecurityGroup"
          }
        ],
        "SubnetId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "PrivateSubnetAZ3"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ServiceName"
                  },
                  " (",
                  {
                    "Ref": "Environment"
                  },
                  ")"
                ]
              ]
            }
          },
          {
            "Key": "StackName",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Description",
            "Value": "eniaz3"
          }
        ]
      }
    },
    "EIPStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com/nubis-stacks",
              {
                "Ref": "StacksVersion"
              },
              "eip.template"
            ]
          ]
        },
        "TimeoutInMinutes": "60",
        "Parameters": {
          "StackName": {
            "Ref": "AWS::StackName"
          },
          "IamRole": {
            "Ref": "IamRole"
          }
        }
      }
    },
    "IamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "IamEniAttachPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "attach",
              "policy"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:AssociateAddress",
                "ec2:AssignPrivateIpAddresses",
                "ec2:AttachNetworkInterface",
                "ec2:CreateNetworkInterface",
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSubnets",
                "ec2:DetachNetworkInterface"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRole"
          }
        ]
      }
    },
    "IamModifyInstanceAttribute": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "modify",
              "instance"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:ModifyInstanceAttribute"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRole"
          }
        ]
      }
    }
  },
  "Outputs": {
    "EniAz1": {
      "Description": "ENI ID AZ1",
      "Value": {
        "Ref": "EniAZ1"
      }
    },
    "EniAz2": {
      "Description": "ENI ID AZ2",
      "Value": {
        "Ref": "EniAZ2"
      }
    },
    "EniAz3": {
      "Description": "ENI ID AZ3",
      "Value": {
        "Ref": "EniAZ3"
      }
    },
    "ElasticIP": {
      "Description": "Allocated elastic IP",
      "Value": {
        "Fn::GetAtt": [
          "EIPStack",
          "Outputs.ElasticIP"
        ]
      }
    },
    "EIPAllocationID": {
      "Description": "EIP allocation ID",
      "Value": {
        "Fn::GetAtt": [
          "EIPStack",
          "Outputs.EIPAllocationID"
        ]
      }
    }
  }
}
